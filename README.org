#+TITLE: Timeline

Shows a timeline for a set of files.

[[file:example.png]]

Will try to open all file types using external libraries:
 - fetch contents of plain text files
 - render video files with [[https://github.com/ffmpegwasm/ffmpeg.wasm][ffmpeg.wasm]]
 - render documents with [[https://github.com/alphakevin/unoconv-server][unoconv-server]]

[[https://github.com/alphakevin/unoconv-server][unoconv-server]] patched with [[https://github.com/expressjs/cors#enabling-cors-pre-flight][cors]] is expected at REACT_APP_UNOCONV_URL.

works out of the box with nix
#+begin_src sh
# nix shell with nodejs
nix develop

# check if it works, exit with C-c C-c
npm start

curl http://localhost:3000/hostname/timeline
#+end_src

# naive example of generating metadata for files
#+begin_src sh
# get our repo
git clone https://github.com/fetsorn/timeline ~/timeline

# prepare some files
mkdir ~/assets

# symlink files to repo
ln -s ~/assets ~/timeline/public/api/assets

## print metadata for files in a directory
mkdir ~/events
cd ~/assets
fd . -t f -0 | \
  xargs -0 -I {} sh -c \
    'filepath=$0; \
     uuid=$(printf "%s" "$filepath" | shasum | cut -c 1-40); \
     datemod=$(stat "$filepath" --printf=%y | cut -c 1-10 ); \
     printf "{\"UUID\":\"%s\",
              \"PRIVACY\":\"private\",
              \"PATH\":%s,
              \"FILETYPE\":%s,
              \"HOST_NAME\":\"fetsorn\",
              \"HOST_DATE\":\"%s\",
              \"GUEST_NAME\":\"fetsorn\",
              \"GUEST_DATE\":\"%s\",
              \"DATUM\":\"\"}\n" \
            $uuid \
            "$(jq -sR <<< "$filepath")" \
            "$(jq -sR <<< "$filetype")" \
            $datemod \
            $datemod \
            > ~/events/$uuid.json' "{}";

## merge metadata to an array
 fd . ~/events -t f -x cat | \
   jq -s 'group_by(.HOST_DATE) |
          map({date:.[0].HOST_DATE,
               events:(.)})' > ~/timeline/public/api/hosts/hostname/timeline.json

# start timeline
npm start
#+end_src
